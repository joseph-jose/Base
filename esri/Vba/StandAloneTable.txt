Sub QryFltr(vLyr As IStandaloneTable, vStr As String)
    Dim vQryFltr As IQueryFilter
    Set vQryFltr = New QueryFilter
    vQryFltr.WhereClause = vStr
    
    Dim vFtCursr As ICursor
    Dim vFtCls As ITable
    Set vFtCls = vLyr.Table
    
    Set vFtCursr = vFtCls.Search(vQryFltr, False)
    
    Dim vRow As IRow
    'Dim vFeat As IFeature
    Set vRow = vFtCursr.NextRow
    While Not (vRow Is Nothing)
        'Set vRow = vFeat
        Dim vStrVal As String
        vStrVal = vRow.Value(vRow.Fields.FindField("Equipment"))
        MsgBox vStrVal
        
        Set vRow = vFtCursr.NextRow
    Wend
    
    
End Sub

Public Sub v2()
    Dim vStnTbl As IStandaloneTable
    Set vStnTbl = getStandAloneLayers()
    MsgBox vStnTbl.Name
    QryFltr vStnTbl, "GISSTATE='IN Progress'"
End Sub
Public Function getStandAloneLayers() As IStandaloneTable
'------iterate layers------------
    Dim vDoc As IMxDocument
    Set vDoc = ThisDocument
    Dim vMap As IMap
    
    Set vMap = vDoc.FocusMap
    
    Dim pSTC As IStandaloneTableCollection
    Set pSTC = vMap
    Dim pST As IStandaloneTable
    'Set pST = pSTC.StandaloneTable(0) ' x is index number
    
    Dim vDocCnt As Integer
    vDocCnt = pSTC.StandaloneTableCount
    For vI = 0 To vDocCnt
        Set pST = pSTC.StandaloneTable(vI) ' x is index number
        If (pST.Name = "WAT_SAPGIS") Then
            Set getStandAloneLayers = pST
            Exit For
        End If
    Next
    
    
    
    'MsgBox pSTC.StandaloneTableCount
    
    'MsgBox pST.Name
'    pSTC.RemoveStandaloneTable (pST)
End Function


